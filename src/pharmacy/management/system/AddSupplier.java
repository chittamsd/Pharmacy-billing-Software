/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pharmacy.management.system;

import dao.ConnectionProvider;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.DriverManager;
import dao.ConnectionProvider;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.PDPageContentStream;
import org.apache.pdfbox.pdmodel.common.PDStream;
import org.apache.pdfbox.pdmodel.common.*;

import javax.swing.*;
import java.io.IOException;
import java.io.OutputStream;

import java.util.List;
import java.util.Optional;
import java.util.function.Supplier;

//import static org.apache.pdfbox.pdmodel.PDPage.PAGE_SIZE_A4;
//import static org.apache.pdfbox.pdmodel.PDPageContentStream.AppendMode.OVERWRITE;
/**
 *
 * @author mbish
 */
public class AddSupplier extends javax.swing.JFrame {

    private String emailPattern = "^[a-zA-Z0-9]+[@]+[a-zA-Z0-9]+[.]+[a-zA-Z0-9]+$";
    public String mobileNumberPattern = "^[0-9]*$";
    public int checkUsername = 0;

    /**
     * Creates new form Supplier
     */
    public AddSupplier() {

        initComponents();
        comboGstType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboGstTypeActionPerformed(evt);
            }
        });
        txtGstNumber.setEditable(false);
        txtTinNumber.setEditable(false);

        populateTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSupplierName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        CmbSuppliertype = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        txtMobileNumber = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtAlternateNumber = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtEmailId = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtOtherDetails = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        comboGstType = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        txtGstNumber = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtTinNumber = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtBankNumber = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtIFSCNumber = new javax.swing.JTextField();
        btnPDF = new javax.swing.JButton();
        btnExcel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        EditAndUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtSupplierNameSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtTotalSupplier = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        comboConType = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Add Supplier");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(523, 6, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Supplier Details");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, -1, -1));

        jLabel3.setText("Supplier Name");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));
        getContentPane().add(txtSupplierName, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 270, -1));

        jLabel4.setText("Supplier Type");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        CmbSuppliertype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sundry Debtors", "Sundry Creditors", "Analysis Account", "Trading Account", "Salary Account" }));
        CmbSuppliertype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmbSuppliertypeActionPerformed(evt);
            }
        });
        getContentPane().add(CmbSuppliertype, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 270, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Other Information");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 183, -1));

        jLabel6.setText("Address :");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, -1, -1));

        txtAddress.setColumns(20);
        txtAddress.setRows(5);
        jScrollPane1.setViewportView(txtAddress);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, 272, 70));

        jLabel7.setText("Mobile Number");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, -1));
        getContentPane().add(txtMobileNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, 272, -1));

        jLabel8.setText("Altn Mob.");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, -1, -1));

        txtAlternateNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAlternateNumberActionPerformed(evt);
            }
        });
        getContentPane().add(txtAlternateNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 330, 272, -1));

        jLabel9.setText("Email ID");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, -1, -1));
        getContentPane().add(txtEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 360, 272, -1));

        jLabel10.setText("Other Details :");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, -1, -1));

        txtOtherDetails.setColumns(20);
        txtOtherDetails.setRows(5);
        jScrollPane2.setViewportView(txtOtherDetails);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 400, 260, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("GST & Bank");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 510, -1, -1));

        jLabel12.setText("GST Type");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 570, -1, -1));

        comboGstType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Consumer", "Tin (GST)" }));
        comboGstType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboGstTypeActionPerformed(evt);
            }
        });
        getContentPane().add(comboGstType, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 570, 230, -1));

        jLabel13.setText("GST No.");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 600, 43, -1));

        txtGstNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGstNumberActionPerformed(evt);
            }
        });
        getContentPane().add(txtGstNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 600, 230, -1));

        jLabel14.setText("Tin No.");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 630, -1, -1));
        getContentPane().add(txtTinNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 630, 230, -1));

        jLabel15.setText("Bank Account No.");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, -1, -1));
        getContentPane().add(txtBankNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 660, 230, -1));

        jLabel16.setText("IFSC No.");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 690, -1, -1));
        getContentPane().add(txtIFSCNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 690, 230, -1));

        btnPDF.setText("PDF");
        btnPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPDFActionPerformed(evt);
            }
        });
        getContentPane().add(btnPDF, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 730, -1, -1));

        btnExcel.setText("EXCEL");
        getContentPane().add(btnExcel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 730, -1, -1));

        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 730, -1, -1));

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/close.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1300, 10, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Sl No.", "Supplier Name", "Supplier Type", "Address", "Mobile Number", "Other", "GST Type", "GST Number", "Tin No.", "Bank Account No.", "IFSC"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 80, 870, 580));

        EditAndUpdate.setText("Modify");
        EditAndUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditAndUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(EditAndUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 680, -1, -1));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 680, -1, -1));

        txtSupplierNameSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSupplierNameSearchActionPerformed(evt);
            }
        });
        getContentPane().add(txtSupplierNameSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 680, 140, -1));

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(1250, 680, -1, -1));

        jLabel17.setText("Supplier Name");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 680, 90, 20));

        jLabel19.setText("Total Supplier");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 680, 80, 20));

        txtTotalSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalSupplierActionPerformed(evt);
            }
        });
        getContentPane().add(txtTotalSupplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 680, 160, -1));

        jLabel20.setText("Con. Type");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 540, -1, -1));

        comboConType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Local", "Outside" }));
        getContentPane().add(comboConType, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 540, 230, -1));
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAlternateNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAlternateNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAlternateNumberActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void EditAndUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditAndUpdateActionPerformed


    }//GEN-LAST:event_EditAndUpdateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        String supplierName = txtSupplierName.getText();
        String supplierType = (String) CmbSuppliertype.getSelectedItem();
        String address = txtAddress.getText();
        String mobile = txtMobileNumber.getText();
        String altmobile = txtAlternateNumber.getText();
        String email = txtEmailId.getText();
        String otherDetails = txtOtherDetails.getText();
        String conType = (String) comboConType.getSelectedItem();
        String gstType = (String) comboGstType.getSelectedItem();
        String gstNumber = txtGstNumber.getText();
        String tinNumber = txtTinNumber.getText();
        String bankNumber = txtBankNumber.getText();
        String ifscNumber = txtIFSCNumber.getText();

        if (supplierName.equals("")) {
            JOptionPane.showMessageDialog(null, "Supplier Name is required");
        } else if (supplierType.equals("")) {
            JOptionPane.showMessageDialog(null, "Supplier Type is required");
        } else if (address.equals("")) {
            JOptionPane.showMessageDialog(null, "Address is required");
        } else if (mobile.equals("")) {
            JOptionPane.showMessageDialog(null, "Mobile Number is required");
        } else if (!mobile.contains(mobileNumberPattern)) {
            JOptionPane.showMessageDialog(null, "Mobile Number is Invalid");
        } else if (altmobile.equals("")) {
            JOptionPane.showMessageDialog(null, "Alternate Mobile Number is required");
        } else if (!altmobile.contains(mobileNumberPattern)) {
            JOptionPane.showMessageDialog(null, "Alternate Mobile Number is invalid");
        } else if (email.equals("")) {
            JOptionPane.showMessageDialog(null, "Email is required");
        } else if (!email.contains(emailPattern)) {
            JOptionPane.showMessageDialog(null, "Email is invalid");
        } else if (conType.equals("Select")) {
            JOptionPane.showMessageDialog(null, "Please Select the Consumer Type");
        } else if (gstType.equals("Select")) {
            JOptionPane.showMessageDialog(null, "Please Select the GST Type");
        } else if (bankNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "Account Number is required");
        } else if (ifscNumber.equals("")) {
            JOptionPane.showMessageDialog(null, "ifsc Number is required");
        } else if (gstType.equals("Select")) {
            JOptionPane.showMessageDialog(null, "Please Select GST Type");
            if (supplierName.equals("")) {
                JOptionPane.showMessageDialog(null, "Supplier Name is required");
            } else if (supplierType.equals("")) {
                JOptionPane.showMessageDialog(null, "Supplier Type is required");
            } else if (address.equals("")) {
                JOptionPane.showMessageDialog(null, "Address is required");
            } else if (mobile.equals("")) {
                JOptionPane.showMessageDialog(null, "Mobile Number is required");
            } else if (!mobile.contains(mobileNumberPattern)) {
                JOptionPane.showMessageDialog(null, "Mobile Number is Invalid");
            } else if (altmobile.equals("")) {
                JOptionPane.showMessageDialog(null, "Alternate Mobile Number is required");
            } else if (!altmobile.contains(mobileNumberPattern)) {
                JOptionPane.showMessageDialog(null, "Alternate Mobile Number is invalid");
            } else if (email.equals("")) {
                JOptionPane.showMessageDialog(null, "Email is required");
            } else if (!email.contains(emailPattern)) {
                JOptionPane.showMessageDialog(null, "Email is invalid");
            } else if (conType.equals("Select")) {
                JOptionPane.showMessageDialog(null, "Please Select the Consumer Type");
            } else if (gstType.equals("Select")) {
                JOptionPane.showMessageDialog(null, "Please Select the GST Type");
            } else if (bankNumber.equals("")) {
                JOptionPane.showMessageDialog(null, "Account Number is required");
            } else if (ifscNumber.equals("")) {
                JOptionPane.showMessageDialog(null, "ifsc Number is required");
            } else if (gstType.equals("Select")) {
                JOptionPane.showMessageDialog(null, "Please Select GST Type");
                if (supplierName.equals("")) {
                    JOptionPane.showMessageDialog(null, "Supplier Name is required");
                } else if (supplierType.equals("")) {
                    JOptionPane.showMessageDialog(null, "Supplier Type is required");
                } else if (address.equals("")) {
                    JOptionPane.showMessageDialog(null, "Address is required");
                } else if (mobile.equals("")) {
                    JOptionPane.showMessageDialog(null, "Mobile Number is required");
                } else if (!mobile.matches(mobileNumberPattern)) {
                    JOptionPane.showMessageDialog(null, "Mobile Number is Invalid");
                } else if (mobile.length() != 10) {
                    JOptionPane.showMessageDialog(null, "Mobile Number is Invalid");
                } else if (altmobile.equals("")) {
                    JOptionPane.showMessageDialog(null, "Alternate Mobile Number is required");
                } else if (!altmobile.matches(mobileNumberPattern)) {
                    JOptionPane.showMessageDialog(null, "Alternate Mobile Number is invalid");
                } else if (email.equals("")) {
                    JOptionPane.showMessageDialog(null, "Email is required");
                } else if (!email.matches(emailPattern)) {
                    JOptionPane.showMessageDialog(null, "Email is invalid");
                } else if (conType.equals("Select")) {
                    JOptionPane.showMessageDialog(null, "Please Select the Consumer Type");
                } else if (gstType.equals("Select")) {
                    JOptionPane.showMessageDialog(null, "Please Select the GST Type");
                } else if (bankNumber.equals("")) {
                    JOptionPane.showMessageDialog(null, "Account Number is required");
                } else if (ifscNumber.equals("")) {
                    JOptionPane.showMessageDialog(null, "ifsc Number is required");
                } else if (gstType.equals("Select")) {
                    JOptionPane.showMessageDialog(null, "Please Select GST Type");
                } else {
                    try {
                        Connection con = ConnectionProvider.getCon();
                        PreparedStatement ps = con.prepareStatement("INSERT INTO supplier (supplierName, supplierType, address, mobileNumber, altMobile, email, otherDetails, conType, gstType, gstNumber, tinNumber, bankAccountNo, ifsc) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                        ps.setString(1, supplierName);      // supplierName
                        ps.setString(2, supplierType);      // supplierType
                        ps.setString(3, address);           // address
                        ps.setString(4, mobile);            // mobileNumber
                        ps.setString(5, altmobile);         // altMobile
                        ps.setString(6, email);             // email
                        ps.setString(7, otherDetails);      // otherDetails
                        ps.setString(8, conType);          // conType
                        ps.setString(9, gstType);           // gstType
                        ps.setString(10, gstNumber);         // gstNumber
                        ps.setString(11, tinNumber);        // tinNumber
                        ps.setString(12, bankNumber);       // bankAccountNo
                        ps.setString(13, ifscNumber);       // ifsc

                        ps.executeUpdate();

                        JOptionPane.showMessageDialog(null, "Supplier Added SuccessFully");
                        setVisible(true);
                        new AddSupplier().setVisible(true);
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex);
                    }

                }
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
// Get the selected row index
        int selectedRowIndex = jTable1.getSelectedRow();

        // Check if a row is selected
        if (selectedRowIndex == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.", "No Row Selected", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Get the supplier primary key (assuming it's in the first column)
        int supplierPrimaryKey = (int) jTable1.getValueAt(selectedRowIndex, 0);

        // Confirm with the user before deleting
        int confirmDelete = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this supplier?", "Confirm Delete", JOptionPane.YES_NO_OPTION);

        if (confirmDelete == JOptionPane.YES_OPTION) {
            // Delete the supplier from the database
            try {
                Connection con = ConnectionProvider.getCon();
                PreparedStatement ps = con.prepareStatement("DELETE FROM supplier WHERE supplier_pk = ?");
                ps.setInt(1, supplierPrimaryKey);
                int result = ps.executeUpdate();

                if (result > 0) {
                    JOptionPane.showMessageDialog(this, "Supplier deleted successfully.", "Delete Success", JOptionPane.INFORMATION_MESSAGE);

                    // Refresh the table
                    populateTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to delete supplier.", "Delete Failed", JOptionPane.ERROR_MESSAGE);
                }

                ps.close();
                con.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtSupplierNameSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSupplierNameSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSupplierNameSearchActionPerformed

    private void txtTotalSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalSupplierActionPerformed
        int rowCount = jTable1.getRowCount();
        txtTotalSupplier.setText(Integer.toString(rowCount));
    }//GEN-LAST:event_txtTotalSupplierActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String searchCriteria = txtSupplierNameSearch.getText().trim();

        if (searchCriteria.isEmpty()) {
            // Search field is empty, fetch and display all data
            populateTable();
        } else {
            // Perform a search based on the entered criteria (e.g., supplier name)
            searchAndDisplayResults(searchCriteria);
        }
    }

// Add a new method to perform the search and update the table
    private void searchAndDisplayResults(String searchCriteria) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear existing data in the table

        try {
            Connection con = ConnectionProvider.getCon();
            PreparedStatement ps = con.prepareStatement("SELECT * FROM supplier WHERE supplierName LIKE ?");
            ps.setString(1, "%" + searchCriteria + "%"); // Search for supplier names containing the entered criteria
            ResultSet rs = ps.executeQuery();
            boolean found = false; // Flag to track if any suppliers were found

            while (rs.next()) {
                int slno = rs.getInt("supplier_pk");
                String supplierName = rs.getString("supplierName");
                String supplierType = rs.getString("supplierType");
                String address = rs.getString("address");
                String mobileNumber = rs.getString("mobileNumber");
                String altMobile = rs.getString("altMobile");
                String email = rs.getString("email");
                String otherDetails = rs.getString("otherDetails");
                String gstType = rs.getString("gstType");
                String gstNumber = rs.getString("gstNumber");
                String tinNumber = rs.getString("tinNumber");
                String bankAccountNo = rs.getString("bankAccountNo");
                String ifsc = rs.getString("ifsc");

                if (gstNumber.isEmpty() || tinNumber.isEmpty()) {
                    gstNumber = "--";
                    tinNumber = "--";
                }
                model.addRow(new Object[]{
                    slno,
                    supplierName,
                    supplierType,
                    address,
                    mobileNumber,
                    otherDetails,
                    gstType,
                    gstNumber,
                    tinNumber,
                    bankAccountNo,
                    ifsc
                });
                found = true; // At least one supplier was found
            }
            if (!found) {
                // No suppliers were found, show a message dialog
                JOptionPane.showMessageDialog(this, "Supplier isn't present.", "No Results", JOptionPane.INFORMATION_MESSAGE);
            }
            rs.close();
            ps.close();
            con.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void CmbSuppliertypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmbSuppliertypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CmbSuppliertypeActionPerformed

    private void comboGstTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboGstTypeActionPerformed
        String selectedGstType = (String) comboGstType.getSelectedItem();

        if ("Tin (GST)".equals(selectedGstType)) {
            txtGstNumber.setEditable(true);
            txtTinNumber.setEditable(true);
        } else {
            // Disable GST Number and Tin Number fields for other selections
            txtGstNumber.setEditable(false);
            txtTinNumber.setEditable(false);
        }
    }//GEN-LAST:event_comboGstTypeActionPerformed

    private void txtGstNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGstNumberActionPerformed

     }//GEN-LAST:event_txtGstNumberActionPerformed

    private void btnPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPDFActionPerformed
//       try {
//        // Create a new PDF document
//        PDDocument document = new PDDocument();
//
//        // Add a page to the document
//        PDPage page = new PDPage();
//        document.addPage(page);
//
//        // Create a table to hold the data
//        float margin = 50;
//        float yStart = page.getMediaBox().getHeight() - margin;
//        float tableWidth = page.getMediaBox().getWidth() - 2 * margin;
//        float yPosition = yStart;
//        int rows = jTable1.getRowCount();
//        int cols = jTable1.getColumnCount();
//        float rowHeight = 20f;
//        float tableHeight = rowHeight * (float) rows;
//        float colWidth = tableWidth / (float) cols;
//        float cellMargin = 5f;
//
//        // Create a table object with the number of rows and columns
//        PDPageContentStream contentStream = new PDPageContentStream(document, page);
//        PDStreamTable table = new PDStreamTable();
//
//        // Define the table layout
//        float marginX = margin;
//        float marginY = 0;
//        float yPositionTop = yPosition;
//        boolean drawContent = true;
//        table.addTable(tableHeight, yPosition, marginX, marginY, tableWidth, drawContent, page, true);
//
//        // Create a header row
//        for (int i = 0; i < cols; i++) {
//            String columnHeader = jTable1.getColumnName(i);
//            table.addHeaderCell(new Cell<PDPage>().add(new Paragraph(columnHeader)));
//        }
//
//        // Add data rows
//        for (int i = 0; i < rows; i++) {
//            for (int j = 0; j < cols; j++) {
//                String cellValue = jTable1.getValueAt(i, j).toString();
//                table.addCell(new Cell<PDPage>().add(new Paragraph(cellValue)));
//            }
//        }
//
//        // Draw the table on the page
//        table.draw(() -> document, () -> contentStream, page, marginX, yPositionTop, tableWidth);
//
//        // Close the content stream
//        contentStream.close();
//
//        // Save the PDF file
//        JFileChooser fileChooser = new JFileChooser();
//        int returnValue = fileChooser.showSaveDialog(this);
//
//        if (returnValue == JFileChooser.APPROVE_OPTION) {
//            String outputFile = fileChooser.getSelectedFile().getAbsolutePath();
//            document.save(outputFile);
//            document.close();
//            JOptionPane.showMessageDialog(this, "PDF saved successfully.", "PDF Saved", JOptionPane.INFORMATION_MESSAGE);
//        } else {
//            JOptionPane.showMessageDialog(this, "PDF creation canceled.", "PDF Canceled", JOptionPane.INFORMATION_MESSAGE);
//        }
//    } catch (IOException e) {
//        JOptionPane.showMessageDialog(this, "Error creating PDF: " + e.getMessage(), "PDF Error", JOptionPane.ERROR_MESSAGE);
//    }
    }//GEN-LAST:event_btnPDFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddSupplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        java.awt.EventQueue.invokeLater(() -> {
            AddSupplier addSupplier = new AddSupplier();
            addSupplier.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CmbSuppliertype;
    private javax.swing.JButton EditAndUpdate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnPDF;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> comboConType;
    private javax.swing.JComboBox<String> comboGstType;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtAlternateNumber;
    private javax.swing.JTextField txtBankNumber;
    private javax.swing.JTextField txtEmailId;
    private javax.swing.JTextField txtGstNumber;
    private javax.swing.JTextField txtIFSCNumber;
    private javax.swing.JTextField txtMobileNumber;
    private javax.swing.JTextArea txtOtherDetails;
    private javax.swing.JTextField txtSupplierName;
    private javax.swing.JTextField txtSupplierNameSearch;
    private javax.swing.JTextField txtTinNumber;
    private javax.swing.JTextField txtTotalSupplier;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear existing data in the table

        try {
            Connection con = ConnectionProvider.getCon();
            PreparedStatement ps = con.prepareStatement("SELECT * FROM supplier");
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                int slno = rs.getInt("supplier_pk");
                String supplierName = rs.getString("supplierName");
                String supplierType = rs.getString("supplierType");
                String address = rs.getString("address");
                String mobileNumber = rs.getString("mobileNumber");
                String altMobile = rs.getString("altMobile");
                String email = rs.getString("email");
                String otherDetails = rs.getString("otherDetails");
                String gstType = rs.getString("gstType");
                String gstNumber = rs.getString("gstNumber");
                String tinNumber = rs.getString("tinNumber");
                String bankAccountNo = rs.getString("bankAccountNo");
                String ifsc = rs.getString("ifsc");

                if (gstNumber.isEmpty() || tinNumber.isEmpty()) {
                    gstNumber = "null";
                    tinNumber = "null";
                }
                // Add the data to the table model
                model.addRow(new Object[]{
                    slno,
                    supplierName,
                    supplierType,
                    address,
                    mobileNumber,
                    otherDetails,
                    gstType,
                    gstNumber,
                    tinNumber,
                    bankAccountNo,
                    ifsc
                });
            }
            updateTotalSupplierCount();
            rs.close();
            ps.close();
            con.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    private void updateTotalSupplierCount() {
        int rowCount = jTable1.getRowCount();
        txtTotalSupplier.setText(Integer.toString(rowCount));
    }
}
